<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up behaviour Timelines

//global.behaviour_free_human = createTimelineForCommand(C_FREE_HUMAN_INDEX);
//global.behaviour_mind_control_down = createTimelineForCommand(C_ARROW_DOWN);
//global.behaviour_mind_control_down_left = createTimelineForCommand(C_ARROW_DOWN_LEFT);
//global.behaviour_mind_control_down_right = createTimelineForCommand(C_ARROW_DOWN_RIGHT);
//global.behaviour_mind_control_left = createTimelineForCommand(C_ARROW_LEFT);
//global.behaviour_mind_control_left_down = createTimelineForCommand(C_ARROW_LEFT_DOWN);
//global.behaviour_mind_control_left_up = createTimelineForCommand(C_ARROW_LEFT_UP);
//global.behaviour_mind_control_right = createTimelineForCommand(C_ARROW_RIGHT);
//global.behaviour_mind_control_right_down = createTimelineForCommand(C_ARROW_RIGHT_DOWN);
//global.behaviour_mind_control_right_up = createTimelineForCommand(C_ARROW_RIGHT_UP);
//global.behaviour_mind_control_up = createTimelineForCommand(C_ARROW_UP);
//global.behaviour_mind_control_up_left = createTimelineForCommand(C_ARROW_UP_LEFT);
//global.behaviour_mind_control_up_right = createTimelineForCommand(C_ARROW_UP_RIGHT);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up base score and lists

score = 0;
combo = 0;
stored_command_list = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update the three instance visualisation things.

var next_value = 12;

if(ds_list_size(stored_command_list) == 3) {
    next_value = ds_list_find_value(stored_command_list, 2);
    with(instance_find(obj_command_list, 2)) {
        image_index = next_value;
    }
} else {
    with(instance_find(obj_command_list, 2)) {
        image_index = 12;
    }
}

if(ds_list_size(stored_command_list) &gt;= 2) {
    next_value = ds_list_find_value(stored_command_list, 1);
    with(instance_find(obj_command_list, 1)) {
        image_index = next_value;
    }
} else {
    with(instance_find(obj_command_list, 1)) {
        image_index = 12;
    }
}

if(ds_list_size(stored_command_list) &gt;= 1) {
    next_value = ds_list_find_value(stored_command_list, 0);
    with(instance_find(obj_command_list, 0)) {
        image_index = next_value;
    }
} else {
    with(instance_find(obj_command_list, 0)) {
        image_index = 12;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>703</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>2368</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>64</string>
          </argument>
          <argument>
            <kind>1</kind>
            <string>Score: </string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_cowpoke</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up Command Queue

depth = 100;
mc_glow = 0;
command_list = ds_list_create();
object_default_behaviour = -1;
timeline_index = -1;
timeline_position = 0;
timeline_running = false;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If Stopped, Check Command Queue or Return to Normal Human AI

if(timeline_index == -1)
{
    //show_debug_message("Timeline reset");
    new_timeline_index = object_default_behaviour;
    
    if(!ds_list_empty(command_list)) {
        new_timeline_index = ds_list_find_value(command_list, 0);
        ds_list_delete(command_list, 0);
        
        //show_debug_message("Fetched next command");
    }
    
    if((new_timeline_index == object_default_behaviour) &amp;&amp; (mc_glow != 0)) {
        with(mc_glow) instance_destroy();
        mc_glow = 0;
        //show_debug_message("Killed MC glow");
    }
    
    if((mc_glow != 0) &amp;&amp; !((new_timeline_index == object_default_behaviour) || (new_timeline_index == C_FREE_HUMAN_INDEX))) {
        mc_glow.image_index = new_timeline_index;
    }
    
    switch(new_timeline_index) {
        case C_ARROW_DOWN:
            timeline_index = behaviour_mind_control_down;
            break;
        case C_ARROW_DOWN_LEFT:
            timeline_index = behaviour_mind_control_down_left;
            break;
        case C_ARROW_DOWN_RIGHT:
            timeline_index = behaviour_mind_control_down_right;
            break;
        case C_ARROW_LEFT:
            timeline_index = behaviour_mind_control_down_left;
            break;
        case C_ARROW_LEFT_DOWN:
            timeline_index = behaviour_mind_control_down_left_down;
            break;
        case C_ARROW_LEFT_UP:
            timeline_index = behaviour_mind_control_down_left_up;
            break;
        case C_ARROW_RIGHT:
            timeline_index = behaviour_mind_control_right;
            break;
        case C_ARROW_RIGHT_DOWN:
            timeline_index = behaviour_mind_control_right_down;
            break;
        case C_ARROW_RIGHT_UP:
            timeline_index = behaviour_mind_control_right_up;
            break;
        case C_ARROW_UP:
            timeline_index = behaviour_mind_control_up;
            break;
        case C_ARROW_UP_LEFT:
            timeline_index = behaviour_mind_control_up_left;
            break;
        case C_ARROW_UP_RIGHT:
            timeline_index = behaviour_mind_control_up_right;
            break;
        case C_FREE_HUMAN_INDEX:
        case object_default_behaviour:
            timeline_index = behaviour_free_human;
            break;
    }
    timeline_position = 0;
    timeline_running = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If outside the boundaries, get back inside them.

if(x &lt; 338) {
    x = 338;
}

if(x &gt; 2496) {
    x = 2496;
}

if(y &lt; 0) {
    y = 0;
}

if(y &gt; 1344) {
    y = 1344;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Apply new command.

var next_command = scr_get_next_command_to_apply()

if(next_command != -1) {
    if(mc_glow == 0) {
        timeline_index = -1;
        ds_list_add(command_list, next_command);
        mc_glow = instance_create(x, y, obj_mind_control_glow);
        mc_glow.followed_cowboy = self
        mc_glow.image_index = next_command;
    } else {
        ds_list_add(command_list, next_command);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
